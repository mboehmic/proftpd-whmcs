<?php
 
if (!defined("WHMCS")) {
    die("This file cannot be accessed directly");
}
 
function proftpd_MetaData(){
    return array(
        'DisplayName' => 'ProFtpd',
        'APIVersion' => '1.1', // Use API Version 1.1
        'RequiresServer' => true, // Set true if module requires a server to work
        'DefaultNonSSLPort' => '1111', // Default Non-SSL Connection Port
        'DefaultSSLPort' => '1112', // Default SSL Connection Port
        'ServiceSingleSignOnLabel' => 'Login to Panel as User',
        'AdminSingleSignOnLabel' => 'Login to Panel as Admin',
    );
}
 
function proftpd_ConfigOptions(){
    return array(
        'proftpd Group' => array(
            'Type' => 'text',
            'Size' => '25',
            'Default' => '',
            'Description' => 'ProFtpd group name',
        ),
        'Usage Limit' => array(
            'Type' => 'text',
            'Size' => '25',
            'Default' => '0',
            'Description' => 'Usage limit in bytes. Use 0 or leave blank to disable',
        ),
        'Rate Limit' => array(
            'Type' => 'text',
            'Size' => '25',
            'Default' => '0',
            'Description' => 'Rate limit. Use 0 or leave blank to disable',
        ),
        'Session Limit' => array(
            'Type' => 'text',
            'Size' => '5',
            'Default' => '0',
            'Description' => 'Session limit as a number. Use 0 or leave blank to disable',
        )
    );
}
 
function proftpd_CreateAccount(array $params){
    try {
        $proftpd_email = $params['clientsdetails']['email'];
		
		$proftpd_group = $params['configoption1'];
                
        $proftpd_username = $params['username'];
        $proftpd_password = $params['password'];
		
		$sha1_user_password = "{sha1}".base64_encode(pack("H*", sha1($proftpd_password)));

        $proftpd_sqlhost = $params['serverip'];
        $proftpd_sqldbname = $params['serveraccesshash'];
        $proftpd_sqlusername = $params['serverusername'];
        $proftpd_sqlpassword = $params['serverpassword'];

        if (!$proftpd_username) {
            $proftpd_username = proftpd_username($proftpd_email);

            update_query(
                'tblhosting',
                array(
                    'username' => $proftpd_username
                ),
                array(
                    'id' => $params['serviceid']
                )
            );
        }

        $proftpdsql = ($GLOBALS["___mysqli_ston"] = mysqli_connect($proftpd_sqlhost,  $proftpd_sqlusername,  $proftpd_sqlpassword));
        mysqli_select_db($GLOBALS["___mysqli_ston"], $proftpd_sqldbname);

        $query = "SELECT COUNT(*) FROM ftpuser WHERE userid='$proftpd_username'";
        $result = mysqli_query($proftpdsql, $query);

        if (!$result) {
            $proftpderror = mysqli_error($GLOBALS["___mysqli_ston"]);
            proftpd_WHMCSReconnect();
            return 'ProFtpd Database Query Error: ' . $proftpderror;
        }

        $data = mysqli_fetch_array($result);

        if ($data[0]) {
            proftpd_WHMCSReconnect();
            return 'UserID Already Exists';
        }

        $query = "INSERT INTO ftpuser (userid, passwd, uid, gid, homedir, shell) VALUES ('$proftpd_username', '$sha1_user_password', '2001', '$proftpd_group', '/home/ftproot', '/sbin/nologin')";
        $result = mysqli_query($proftpdsql, $query);

        if (!$result) {
            $proftpderror = mysqli_error($GLOBALS["___mysqli_ston"]);
            proftpd_WHMCSReconnect();
            return 'ProFtpd Database Query Error: ' . $proftpderror;
        }
             

        proftpd_WHMCSReconnect();
    } catch (Exception $e) {
        // Record the error in WHMCS's module log.
        logModuleCall(
            'ProFtpd',
            __FUNCTION__,
            $params,
            $e->getMessage(),
            $e->getTraceAsString()
        );
        return $e->getMessage();
    }

    return 'success';
}


function proftpd_ChangePassword(array $params){
    try {
        $sqlhost = $params['serverip'];
        $sqldbname = $params['serveraccesshash'];
        $sqlusername = $params['serverusername'];
        $sqlpassword = $params['serverpassword'];
 
        $proftpd_username = $params['username'];
        $proftpd_password = $params['password'];
		
		$sha1_user_password = "{sha1}".base64_encode(pack("H*", sha1($proftpd_password)));

        $proftpdsql = ($GLOBALS["___mysqli_ston"] = mysqli_connect($sqlhost,  $sqlusername,  $sqlpassword));
        mysqli_select_db($GLOBALS["___mysqli_ston"], $sqldbname);

        $query = "SELECT COUNT(*) FROM ftpuser WHERE userid='$proftpd_username'";
        $result = mysqli_query($proftpdsql, $query);

        if (!$result) {
            $proftpderror = mysqli_error($GLOBALS["___mysqli_ston"]);
            proftpd_WHMCSReconnect();
            return 'ProFtpd Database Query Error: ' . $proftpderror;
        }

        $data = mysqli_fetch_array($result);
        $count = $data[0];

        if (!$count) {
            proftpd_WHMCSReconnect();
            return 'User Not Found';
        }

        $query = "UPDATE ftpuser SET passwd='$sha1_user_password' WHERE userid='$proftpd_username' ";
        $result = mysqli_query($proftpdsql, $query);

        if (!$result) {
            $proftpderror = mysqli_error($GLOBALS["___mysqli_ston"]);
            proftpd_WHMCSReconnect();
            return 'ProFtpd Database Query Error: ' . $proftpderror;
        }

        proftpd_WHMCSReconnect();
    } catch (Exception $e) {
        // Record the error in WHMCS's module log.
        logModuleCall(
            'ProFtpd',
            __FUNCTION__,
            $params,
            $e->getMessage(),
            $e->getTraceAsString()
        );
        return $e->getMessage();
    }
    return 'success';
}

function proftpd_ChangePackage(array $params)
{
    try {
		$proftpd_group = $params['configoption1'];
        
        $sqlhost = $params['serverip'];
        $sqldbname = $params['serveraccesshash'];
        $sqlusername = $params['serverusername'];
        $sqlpassword = $params['serverpassword'];
	
		 
		$username = $params['username'];
        $password = $params['password'];

        $proftpdsql = ($GLOBALS["___mysqli_ston"] = mysqli_connect($sqlhost,  $sqlusername,  $sqlpassword));
        mysqli_select_db($GLOBALS["___mysqli_ston"], $sqldbname);

        $query = "SELECT COUNT(*) FROM ftpuser WHERE userid='$username'";
        $result = mysqli_query($proftpdsql, $query);

        if (!$result) {
            $proftpderror = mysqli_error($GLOBALS["___mysqli_ston"]);
            proftpd_WHMCSReconnect();
            return 'ProFtpd Database Query Error: ' . $proftpderror;
        }

        $data = mysqli_fetch_array($result);
        $count = $data[0];

        if (!$count) {
            proftpd_WHMCSReconnect();
            return 'User Not Found';
        }

        $query = "UPDATE ftpuser SET gid='$proftpd_group' WHERE userid='$username'";
        $result = mysqli_query($proftpdsql, $query);

        if (!$result) {
            $proftpderror = mysqli_error($GLOBALS["___mysqli_ston"]);
            proftpd_WHMCSReconnect();
            return 'ProFtpd Database Query Error: ' . $proftpderror;
        }


        proftpd_WHMCSReconnect();
    } catch (Exception $e) {
        // Record the error in WHMCS's module log.
        logModuleCall(
            'ProFtpd',
            __FUNCTION__,
            $params,
            $e->getMessage(),
            $e->getTraceAsString()
        );
        return $e->getMessage();
    }

    return 'success';
}


function proftpd_TerminateAccount(array $params){
    try {
        $sqlhost = $params['serverip'];
        $sqldbname = $params['serveraccesshash'];
        $sqlusername = $params['serverusername'];
        $sqlpassword = $params['serverpassword'];

       $proftpd_username = $params['username'];
        $proftpd_password = $params['password'];
		

        $proftpdsql = ($GLOBALS["___mysqli_ston"] = mysqli_connect($sqlhost,  $sqlusername,  $sqlpassword));
        mysqli_select_db($GLOBALS["___mysqli_ston"], $sqldbname);

 
  
        $query = "DELETE FROM ftpuser WHERE userid='$proftpd_username'";
        $result = mysqli_query($proftpdsql, $query);

        if (!$result) {
            $proftpderror = mysqli_error($GLOBALS["___mysqli_ston"]);
            proftpd_WHMCSReconnect();
            return 'ProFtpd Database Query Error: ' . $proftpderror;
        }

        proftpd_WHMCSReconnect();
    } catch (Exception $e) {
        // Record the error in WHMCS's module log.
        logModuleCall(
            'ProFtpd',
            __FUNCTION__,
            $params,
            $e->getMessage(),
            $e->getTraceAsString()
        );
        return $e->getMessage();
    }
    return 'success';
}

function proftpd_WHMCSReconnect() {
    require( ROOTDIR . "/configuration.php" );

    $whmcsmysql = ($GLOBALS["___mysqli_ston"] = mysqli_connect($db_host,  $db_username,  $db_password));
    mysqli_select_db($GLOBALS["___mysqli_ston"], $db_name);
}


function proftpd_username($proftpd_email){
  global $CONFIG;
  $proftpd_emaillen = strlen($proftpd_email);
  $result = select_query(
    "tblhosting",
    "COUNT(*)",
    array(
      "username" => $proftpd_email
    )
  );
  $data = mysql_fetch_array($result);
  $proftpd_username_exists = $data[0];
  $suffix = 0;
  while( $proftpd_username_exists > 0 ){
    $suffix++;
    $proftpd_email = substr( $proftpd_email, 0, $proftpd_emaillen ) . $suffix;
    $result = select_query(
      "tblhosting",
      "COUNT(*)",
      array(
        "username" => $proftpd_email
      )
    );
    $data = mysql_fetch_array($result);
    $proftpd_username_exists = $data[0];
  }
  return $proftpd_email;
}

